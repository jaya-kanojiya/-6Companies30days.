 Given a pattern containing only I's and D's. I for increasing and D for decreasing.
Devise an algorithm to print the minimum number following that pattern.
Digits from 1-9 and digits can't repeat.

//using stack
//d =  push ,incr
//i = push,print,pop
//print last
    string printMinNumberForPattern(string S){
      
        string ans="";
        stack <int> st;
        int num=1;
        for(int i=0;i<S.length();i++)
        {
            if(S[i]=='D')
            {
                st.push(num);
                num++;
            }
            else 
            {
                st.push(num);
                num++;
                while(st.size()>0)
                {
                 int res = st.top();
                 ans+=to_string(res);
                 st.pop();
                }
            }
          }
       st.push(num); 
       while(st.size()>0)
                {
                 int res = st.top();
                 ans+=to_string(res);
                 st.pop();
                }
       return ans;
    }
